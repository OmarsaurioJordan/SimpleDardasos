<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>grupo</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj1=0;
paso=1;
vida=10;
reloj2=-1;
tiro=-1;
arma=-1;//-1:nada,0:espada,1:flecha,2:bala,3:perdigon,4:disco,5:avion,6:bomba
municion=0;
otrocoso=0;
blanco=-1;
transformacion=0;
habla=-1;
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con fantasmas
else{
    denso=0;}//colision con vivos
guardianvoz(4,id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(transformacion=0){
    instance_create(x,y,fantasma);
    instance_create(x,y,fosil);
    condicionador.num_guardianes-=1;
    if(condicionador.renovaguardianes&gt;0){
        if(condicionador.vidas=-2 and instance_exists(capturado)){
            lanzamientos(0,1);}
        else{
            lanzamientos(1,condicionador.renovaguardianes);}}}
if(instance_exists(blanco)){
    blanco.enfoque=0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    otrocoso=instance_nearest(x,y,guardian);
    if(otrocoso&gt;0){
        if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;mele*4){
            otrocoso.cercano2=1;}}
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
otrocoso=instance_place(x,y,proyectil2);//recive disparo
if(otrocoso&gt;0){
    switch(otrocoso.tipo){
        case 0: vida-=gespada; break;//espada
        case 1: vida-=gflecha; break;//flecha
        case 2: vida-=gbalinperdigon; break;//balin
        case 3: vida-=gbalinperdigon; break;//perdigon
        case 4: vida-=gdisco-otrocoso.rebote*0.2; break;//disco
        case 5: vida-=gavion; break;//perseguidor
        case 6: explota(otrocoso,0); break;//bomba
        case 7: vida-=gesquirla; break;}//esquirla
    guardianvoz(0,id);
    if(vida&lt;=0){
        with(otrocoso){
            instance_destroy();}
        if((arma&gt;0 and municion&gt;0)or arma=0){
            otrocoso=instance_create(x,y,objeto);
            otrocoso.tipo=arma;
            otrocoso.municion=municion;}
        instance_destroy();
        exit;}
    else{
        if(arma&gt;0){
            instance_create(x+lengthdir_x(radiobjeto,otrocoso.direction+180),y+lengthdir_y(radiobjeto,otrocoso.direction+180),impactus);}
        with(otrocoso){
            instance_destroy();}}}
otrocoso=instance_place(x,y,bloque);//colision con bloques
if(otrocoso&gt;0){
    x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
    y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}
else{
    otrocoso=instance_place(x,y,movil);//colision con unidades
    if(otrocoso&lt;0 and denso=1){
        otrocoso=instance_place(x,y,astral);}//colision con fantasmas
    if(otrocoso&gt;0){
        x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
        y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}
    else{
        otrocoso=1;
        if(arma=0){
            otrocoso=0.9;}
        else if(arma&gt;0){
            otrocoso=0.8;}
        otrocoso*=1.2;
        if(keyboard_check(vk_left)){//controles movimiento
            if(keyboard_check(vk_down)){
                direction=225;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}
            else if(keyboard_check(vk_up)){
                direction=135;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}
            else{
                direction=180;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}}
        else if(keyboard_check(vk_right)){
            if(keyboard_check(vk_down)){
                direction=315;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}
            else if(keyboard_check(vk_up)){
                direction=45;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}
            else{
                direction=0;
                x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
                y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}}
        else if(keyboard_check(vk_up)){
            direction=90;
            x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
            y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}
        else if(keyboard_check(vk_down)){
            direction=270;
            x+=lengthdir_x((velocidad*otrocoso)*delta_time*0.00001,direction);
            y+=lengthdir_y((velocidad*otrocoso)*delta_time*0.00001,direction);}}}
if(vida&lt;10){//recoge vida
    otrocoso=instance_nearest(x,y,viducha);
    if(otrocoso&gt;0){
        if(point_distance(otrocoso.x,otrocoso.y,x,y)&lt;28){
            guardianvoz(7,id);
            if(otrocoso.tipo=0){
                vida+=3.5;
                if(vida&gt;10){vida=10;}}
            else{
                vida=10;}
            with(otrocoso){instance_destroy();}}}}
if(blanco&gt;0 and instance_exists(blanco)){
    if(point_distance(view_xview[0]+552,view_yview[0]+432,blanco.x,blanco.y)&gt;visualizacion*1.3){
        blanco.enfoque=0; blanco=-1;}}
else{
    blanco=-1;
    ojeandolos(enemigo,id,-1);}
if(x&lt;20){//limites del mundo
    x=20;}
else if(x&gt;room_width-20){
    x=room_width-20;}
if(y&gt;room_height-20){
    y=room_height-20;}
else if(y&lt;120){
    y=120;}
if(reloj2!=-1){//proceso disparar
    if(reloj2&lt;lanzamiento){
        reloj2+=delta_time*0.00001;
        if(tiro=-1 and reloj2&gt;lanzamiento*0.3){
            if(blanco&gt;0 and instance_exists(blanco)){
                disparo(point_direction(x,y,blanco.x,blanco.y),id);
                tiro=2;}
            else{
                blanco=-1;
                tiro=1;}
            if(arma=0){audio_play_sound_at(s_disp_espada,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,3);}}}
    else{
        if(tiro=2 and arma&gt;0){
            municion-=1;}
        if(arma&gt;0 and municion=0){
            arma=-1;}
        tiro=-1;
        reloj2=-1;}}
if(keyboard_check_pressed(vk_enter)or keyboard_check_pressed(vk_numpad0)){//cambiar objetivo
    ojeandolos(enemigo,id,blanco);}
if(keyboard_check_pressed(vk_numpad7)){//botar objeto
    if(reloj2=-1 and arma&gt;-1){
        tiro=instance_create(x,y,objeto);
        tiro.tipo=arma;
        tiro.municion=municion;
        suma_municion(tiro);
        tiro=-1;
        arma=-1;
        municion=0;}}
if(keyboard_check_pressed(vk_shift)){//recoger o cambiar objeto
    tiro=-1;
    reloj2=-1;
    otrocoso=collision_circle(x,y,radiobjeto*2,objeto,altocol,1);
    if(otrocoso&gt;0){
        if(arma&gt;-1){
            if(arma&gt;0 and arma=otrocoso.tipo and municion&lt;99){
                if(municion+otrocoso.municion&lt;100){
                    municion+=otrocoso.municion;
                    with(otrocoso){instance_destroy();}}
                else{
                    otrocoso.municion=municion+otrocoso.municion-99;
                    municion=99;}}
            else{
                tiro=instance_create(x,y,objeto);
                tiro.tipo=arma;
                tiro.municion=municion;
                arma=otrocoso.tipo;
                municion=otrocoso.municion;
                with(otrocoso){instance_destroy();}
                suma_municion(tiro);}}
        else{
            arma=otrocoso.tipo;
            municion=otrocoso.municion;
            with(otrocoso){instance_destroy();}}
        audio_play_sound_at(s_recarga,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,5);
        tiro=0;}
    if(tiro=-1){
        otrocoso=collision_circle(x,y,mele,guardian,altocol,1);
        if(otrocoso&gt;0){
            otrocoso.reloj2=-1;
            otrocoso.tiro=-1;
            if(arma&gt;0 and otrocoso.arma=arma and municion&lt;99){
                if(municion+otrocoso.municion&lt;100){
                    municion+=otrocoso.municion;
                    otrocoso.arma=-1;
                    otrocoso.municion=0;
                    guardianvoz(2,otrocoso);}
                else{
                    otrocoso.municion=municion+otrocoso.municion-99
                    municion=99;
                    audio_play_sound_at(s_recarga,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,5);}}
            else{
                tiro=arma;
                aux=municion;
                arma=otrocoso.arma;
                municion=otrocoso.municion;
                otrocoso.arma=tiro;
                otrocoso.municion=aux;
                if(arma&gt;-1 and tiro=-1){guardianvoz(2,otrocoso);}
                else if(arma=-1 and tiro&gt;-1){guardianvoz(3,otrocoso);}
                else{audio_play_sound_at(s_recarga,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,5);}}
            eventocambiarma(otrocoso);
            tiro=-1;}}
    else{
        tiro=-1;}}
else if(keyboard_check(vk_numpad1) or keyboard_check(vk_numpad2) or keyboard_check(vk_backspace)){//activar el disparo
    if(reloj2=-1 and arma&gt;-1 and blanco&gt;0){
        reloj2=0;}}
else if(keyboard_check_released(vk_delete)){//liberar guardian
    transformacion=1;
    otrocoso=instance_create(x,y,guardian);
    otrocoso.vida=vida;
    otrocoso.arma=arma;
    otrocoso.municion=municion;
    eventocambiarma(otrocoso);
    guardianvoz(1,otrocoso);
    instance_destroy();}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
if(tre_d=0){
    draw_sprite(d_aurisima,3+paso,x,y-120);}
else{
    draw_sprite(d_guardian,4+floor(paso/3),x,y);}
if(xprevious=x and yprevious=y){
    draw_sprite(d_patas,0,x,y);}
else{
    draw_sprite(d_patas,paso,x,y);}
draw_sprite(d_guardian,floor(paso/3),x,y);
if(arma=-1){
    draw_sprite(d_brazos,0,x,y);}
else{
    if(municion&gt;1){
        draw_sprite(d_municion,arma,x,y);}
    else{
        draw_sprite(d_municion,0,x,y);}
    if(tre_d=1){
        if(reloj2=-1){
            draw_sprite(d_armas,arma*9,x,y);}
        else{
            draw_sprite(d_armas,(arma*9)+calculabrazo(reloj2,lanzamiento),x,y);}}
    else{
        if(reloj2=-1){
            draw_sprite(d_armas,arma,x+9,y-97);}
        else if(arma&gt;0 and tiro=1){
            draw_sprite_ext(d_armas,7,x+9,y-97,1,1,(reloj2*720)/lanzamiento,c_white,1);}
        else{
            draw_sprite_ext(d_armas,arma,x+9,y-97,1,1,(reloj2*720)/lanzamiento,c_white,1);}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
