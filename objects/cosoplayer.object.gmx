<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>movil</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_snap(48,48);
if(instance_place(x,y,bloque) or instance_place(x,y,movil)){
    instance_destroy();}
else if(x&lt;32 or x&gt;room_width-32 or y&gt;room_height-32 or y&lt;128){
    instance_destroy();}
with(checkpoint){
    if(point_distance(x,y,cosoplayer.x,cosoplayer.y)&lt;visualizacion*0.5){
        instance_destroy();}}
vidas=1;//0:infinitas,1&gt;&gt;
arma=-1;//-1:nada,0:cualquiera,1:seleccion,2:espada,3:flecha,4:bala,5:perdigon,6:disco,7:avion,8:bomba
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(two_d=0){
draw_sprite(d_sombra,0,x,y);
draw_sprite(d_patas,0,x,y);
draw_sprite(d_personaje,0,x,y);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
switch(arma){
    case 0: draw_sprite(d_brazos,4,x,y);
        draw_text_transformed_colour(x,y-160,"?",2,2,0,c_black,c_black,c_black,c_black,1); break;
    case 1: draw_sprite(d_brazos,4,x,y);
        draw_text_transformed_colour(x,y-160,"+",2,2,0,c_black,c_black,c_black,c_black,1); break;
    case 2: draw_sprite(d_municion,arma-2,x,y);
        if(tre_d=1){
            draw_sprite(d_armas,0,x,y);}
        else{
            draw_sprite(d_armas,0,x+9,y-97);} break;
    case 3: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    case 4: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    case 5: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    case 6: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    case 7: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    case 8: draw_sprite(d_municion,arma-2,x,y);
        draw_sprite(d_brazos,2,x,y); break;
    default: draw_sprite(d_brazos,0,x,y); break;}
if(vidas&gt;0){
    draw_text_transformed_colour(x,y-140,"v:"+string(vidas),2,2,0,c_black,c_black,c_black,c_black,1);}
else{
    draw_text_transformed_colour(x,y-140,"v:inf",2,2,0,c_black,c_black,c_black,c_black,1);}}
else{
    draw_set_valign(fa_middle);
    draw_set_halign(fa_center);
    switch(arma){
    case 0: draw_text_transformed_colour(x,y+30,"?",2,2,0,c_black,c_black,c_black,c_black,1); break;
    case 1: draw_text_transformed_colour(x,y+30,"+",2,2,0,c_black,c_black,c_black,c_black,1); break;
    case 2: draw_sprite(d_objetos,0,x,y+30); break;
    case 3: draw_sprite(d_objetos,1,x,y+30); break;
    case 4: draw_sprite(d_objetos,2,x,y+30); break;
    case 5: draw_sprite(d_objetos,3,x,y+30); break;
    case 6: draw_sprite(d_objetos,4,x,y+30); break;
    case 7: draw_sprite(d_objetos,5,x,y+30); break;
    case 8: draw_sprite(d_objetos,6,x,y+30); break;}
    draw_sprite(d_2d,7,x,y);
    if(vidas&gt;0){
        draw_text_transformed_colour(x,y-30,"v:"+string(vidas),2,2,0,c_black,c_black,c_black,c_black,1);}
    else{
        draw_text_transformed_colour(x,y-30,"v:inf",2,2,0,c_black,c_black,c_black,c_black,1);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
