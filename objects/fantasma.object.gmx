<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>astral</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj1=0;
paso=choose(1,2,3,4);
reloj2=0;
mueve=0;
cambio=8+irandom(12);
limite=20+irandom(10);//tiempo existencia
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con vivos
else{
    denso=0;}//colision con fantasmas
mp_potential_settings(360,20,1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
if(reloj2&lt;cambio){//cambios aleatorios comportamiento
    reloj2+=delta_time*0.00001;}
else{
    reloj2=0;
    cambio=14+irandom(21);
    limite-=1;
    if(limite=0){
        audio_play_sound_at(s_fantasmachao,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,1);
        instance_destroy();
        exit;}
    if(mueve&gt;0){
        if(irandom(3)&gt;0){
            mueve=velocidad*(0.5+denso*0.1)+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        direction+=choose(-1,-1,0,1,1)*irandom(60);}
    else{
        if(irandom(3)=0){
            mueve=velocidad*(0.5+denso*0.1)+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        direction=irandom(360);}}
otrocoso=instance_place(x,y,astral);//colision con fantasmas
if(otrocoso&lt;0 and denso=1){
    otrocoso=instance_place(x,y,movil);}//colision con vivos
if(otrocoso&gt;0){
    direction=point_direction(otrocoso.x,otrocoso.y,x,y)+choose(-1,1)*irandom(30);
    x+=lengthdir_x(velocidad*0.5*delta_time*0.00001,direction);
    y+=lengthdir_y(velocidad*0.5*delta_time*0.00001,direction);}
else if(mueve&gt;0){//movimiento
    x+=lengthdir_x(mueve*delta_time*0.00001,direction);
    y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
else{
    otrocoso=instance_place(x,y,bloque);//colision con bloques
    if(otrocoso&gt;0){
        direction=point_direction(otrocoso.x,otrocoso.y,x,y)+choose(-1,1)*irandom(30);
        x+=lengthdir_x(velocidad*0.5*delta_time*0.00001,direction);
        y+=lengthdir_y(velocidad*0.5*delta_time*0.00001,direction);}}
if(x&lt;20){//limites de mundo
    x=20;
    direction+=choose(-1,1)*irandom(45);}
else if(x&gt;room_width-20){
    x=room_width-20;
    direction+=choose(-1,1)*irandom(45);}
if(y&gt;room_height-20){
    y=room_height-20;
    direction+=choose(-1,1)*irandom(45);}
else if(y&lt;120){
    y=120;
    direction+=choose(-1,1)*irandom(45);}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(d_sombra,0,x,y,1,1,0,c_white,0.5);
if(xprevious=x and yprevious=y){
    draw_sprite(d_patillas,0,x,y);}
else{
    draw_sprite(d_patillas,paso,x,y);}
draw_sprite(d_fantasma,floor(paso/3),x,y);
if(denso=1){
    if(xprevious=x and yprevious=y){
        draw_sprite(d_patillas,0,x,y);}
    else{
        draw_sprite(d_patillas,paso,x,y);}
    draw_sprite(d_fantasma,floor(paso/3),x,y);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
