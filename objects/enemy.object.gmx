<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_distance(x,y,jugador.x,jugador.y)&lt;500){
    instance_destroy();}
reloj1=0;
paso=choose(1,2,3,4);
xx=xstart;
yy=ystart;
otrobloque=0;
otromovil=0;
alarm[0]=20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(choose(0,0,1,1,2)){
    case 0: alarm[0]=60+round(random(60)); break;
    case 1: alarm[0]=40+round(random(40));
        xx=x-600+round(random(1200));
        yy=y-500+round(random(1000)); break;
    case 2: alarm[0]=100+round(random(200));
        xx=50+round(random(room_width-100)); break;
        yy=50+round(random(room_height-100)); break;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=y*-10;
if(reloj1&lt;1){
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
otrobloque=collision_circle(x,y,24,bloque,1,1);
otromovil=collision_circle(x,y,24,movil,1,1);
if(otrobloque&gt;0){
    x+=lengthdir_x((velocidad-0.5-random(1))*delta_time*0.00001,point_direction(otrobloque.x,otrobloque.y,x,y));
    y+=lengthdir_y((velocidad-0.5-random(1))*delta_time*0.00001,point_direction(otrobloque.x,otrobloque.y,x,y));}
else if(otromovil&gt;0){
    x+=lengthdir_x((velocidad-0.5-random(1))*delta_time*0.00001,point_direction(otromovil.x,otromovil.y,x,y));
    y+=lengthdir_y((velocidad-0.5-random(1))*delta_time*0.00001,point_direction(otromovil.x,otromovil.y,x,y));}
else{//movimiento autonomo
    if(point_distance(x,y,xx,yy)&gt;20){
        mp_potential_step_object(xx,yy,0,bloque);
        x+=lengthdir_x((velocidad-0.5-random(1))*delta_time*0.00001,direction);
        y+=lengthdir_y((velocidad-0.5-random(1))*delta_time*0.00001,direction);}}
if(x&lt;20){//limites del mapa
    x=20;}
else if(x&gt;room_width-20){
    x=room_width-20;}
if(y&gt;room_height-20){
    y=room_height-20;}
else if(y&lt;120){
    y=120;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(xprevious=x and yprevious=y){
    draw_sprite(d_patas,0,x,y);}
else{
    draw_sprite(d_patas,paso,x,y);}
draw_sprite(d_enemy,floor(paso/3),x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
