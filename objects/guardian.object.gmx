<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>grupo</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj1=0;
paso=choose(1,2,3,4);
vida=10;
reloj2=-1;
reloj3=0;
tiro=-1;
arma=-1;//-1:nada,0:espada,1:flecha,2:bala,3:perdigon,4:disco,5:avion,6:bomba
municion=0;
otrocoso=-1;
evasor=0;
mente=-1;//objeto a ir
alejamiento=0;//dos limites desde lider player
estado=0;//0:normal,1:persigue,2:rastrea,3:hulle/municion
ojo=0.5;
recarga=-1;
blanco=-1;
metax=x;
metay=y;
hullex=x;
hulley=y;
mueve=0;
direccion=irandom(360);
cambio=8+irandom(12);
transformacion=0;
cercana=-1;//baseazul mas proxima
cercano1=0;
cercano2=0;
rendicion=-1;//temporizador irse si no municion
super=0;//posession espectro
habla=-1;
if(control.barras=1){
    cercano0=1;}
else{
    cercano0=0;}
if(arma=-1){
    estado=3;}
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con fantasmas
else{
    denso=0;}//colision con vivos
mp_potential_settings(360,5,1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(transformacion=0){
    instance_create(x,y,fantasma);
    instance_create(x,y,fosil);
    condicionador.num_guardianes-=1;
    if(condicionador.renovaguardianes&gt;0){
        if(condicionador.vidas=-2 and instance_exists(capturado)){
            lanzamientos(0,1);}
        else{
            lanzamientos(1,condicionador.renovaguardianes);}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;
        if(cercano1=1){
            if(instance_exists(player)){
                if(point_distance(x,y,player.x,player.y)&gt;mele*4){
                    cercano1=0;}}
            else{
                cercano1=0;}}
        if(cercano2=1){
            if(instance_exists(ayudante)){
                if(point_distance(x,y,ayudante.x,ayudante.y)&gt;mele*4){
                    cercano2=0;}}
            else{
                cercano2=0;}}
        if(super=1){
            if(point_distance(x,y,espectro.x,espectro.y)&gt;visualizacion*0.4){
                espectro.super=-1;
                super=0;}}}
    else{
        paso+=1;
        if(paso=2 and arma=-1 and recarga=-1){
            otrocoso=collision_circle(x,y,mele*1.5,guardian,altocol,1);
            if(otrocoso&gt;0){
                tiro=-1;
                switch(otrocoso.arma){
                    case 1: if(otrocoso.municion&gt;=mu1*2){
                        tiro=otrocoso.municion-mu1*1.5;} break;
                    case 2: if(otrocoso.municion&gt;=mu2*2){
                        tiro=otrocoso.municion-mu2*1.5;} break;
                    case 3: if(otrocoso.municion&gt;=mu3*2){
                        tiro=otrocoso.municion-mu3*1.5;} break;
                    case 4: if(otrocoso.municion&gt;=mu4*2){
                        tiro=otrocoso.municion-mu4*1.5;} break;
                    case 5: if(otrocoso.municion&gt;=mu5*2){
                        tiro=otrocoso.municion-mu5*1.5;} break;
                    case 6: if(otrocoso.municion&gt;=mu6*2){
                        tiro=otrocoso.municion-mu6*1.5;} break;}
                if(tiro&gt;0){
                    otrocoso.municion-=tiro;
                    arma=otrocoso.arma;
                    municion=tiro;
                    guardianvoz(6,id);
                    eventocambiarma(id);
                    tiro=-1;}}}}}
if(rendicion!=-1){//irse si no hay municion
    rendicion+=delta_time*0.000001;
    if(rendicion&gt;40 and paso=1){
        if(instance_exists(enemigo)){
            otrocoso=instance_nearest(x,y,enemigo);
            if(collision_line(x,y,otrocoso.x,otrocoso.y,bloque,altocol,1) or point_distance(x,y,otrocoso.x,otrocoso.y)&gt;visualizacion*0.6){
                transformacion=1;
                otrocoso=instance_create(x,y,rendido);
                otrocoso.tipo=1;
                condicionador.num_guardianes-=1;
                if(condicionador.renovaguardianes&gt;0){
                    lanzamientos(1,1);}
                instance_destroy();
                exit;}}
        else{
            transformacion=1;
            otrocoso=instance_create(x,y,rendido);
            otrocoso.tipo=1;
            condicionador.num_guardianes-=1;
            if(condicionador.renovaguardianes&gt;0){
                lanzamientos(1,1);}
            instance_destroy();
            exit;}}}
if(reloj3&lt;cambio){//cambios aleatorios comportamiento
    reloj3+=delta_time*0.00001;}
else{
    reloj3=0;
    cambio=14+irandom(21);
    evasor=choose(-1,1)*(135-irandom(90));
    if(estado!=3 and municion&lt;60){
        mejor_arma(id);}
    if(mueve&gt;0){
        if(irandom(3)&gt;0){
            mueve=velocidad*0.5+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        if(irandom(2)=0 and cercana&gt;0 and (estado=3 or !instance_exists(puntoazul)) and instance_exists(baseazul)){
            otrocoso=instance_nearest(x,y,baseazul);
            if(point_distance(x,y,otrocoso.x,otrocoso.y)&gt;visualizacion){
                direccion=sumangulos(point_direction(x,y,otrocoso.x,otrocoso.y),-30+irandom(60));}
            else{
                direccion+=choose(-1,-1,0,1,1)*irandom(60);}}
        else{
            direccion+=choose(-1,-1,0,1,1)*irandom(60);}}
    else{
        if(irandom(3)=0){
            mueve=velocidad*0.5+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        direccion=irandom(360);}}
otrocoso=instance_place(x,y,proyectil2);//recive disparo
if(otrocoso&gt;0){
    if(super=0){
    switch(otrocoso.tipo){
        case 0: vida-=gespada;//espada
            if(estado&lt;3){blanco=instance_nearest(x,y,enemigo);} break;
        case 1: vida-=gflecha; break;//flecha
        case 2: vida-=gbalinperdigon; break;//balin
        case 3: vida-=gbalinperdigon; break;//perdigon
        case 4: vida-=gdisco-otrocoso.rebote*0.2; break;//disco
        case 5: vida-=gavion; break;//perseguidor
        case 6: explota(otrocoso,0); break;//bomba
        case 7: vida-=gesquirla; break;}//esquirla
    guardianvoz(0,id);
    llamandolos(x,y,otrocoso.direction+180,guardian);
    if(vida&lt;=0){
        with(otrocoso){
            instance_destroy();}
        if((arma&gt;0 and municion&gt;0)or arma=0){
            otrocoso=instance_create(x,y,objeto);
            otrocoso.tipo=arma;
            otrocoso.municion=municion;}
        if(condicionador.vidas=-2 and condicionador.tiempo&gt;0){
            batallaso();}
        instance_destroy();
        exit;}
    else{
        if(arma&gt;0){
            instance_create(x+lengthdir_x(radiobjeto,otrocoso.direction+180),y+lengthdir_y(radiobjeto,otrocoso.direction+180),impactus);}
        if(estado=0){
            estado=2;
            metax=x+lengthdir_x(visualizacion*0.6,otrocoso.direction+180);
            metay=y+lengthdir_y(visualizacion*0.6,otrocoso.direction+180);
            if(collision_line(x,y,metax,metay,bloque,altocol,1)){
                metax=x+lengthdir_x(mele*1.5,otrocoso.direction+180);
                metay=y+lengthdir_y(mele*1.5,otrocoso.direction+180);}}
        with(otrocoso){
            instance_destroy();}}}
    else{
        with(otrocoso){
            instance_destroy();}}
    if(arma=0){
        picandolo(enemigo,id);}}
otrocoso=instance_place(x,y,bloque);//colision con bloques
if(otrocoso&gt;0){
    direction=point_direction(otrocoso.x,otrocoso.y,x,y);
    x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
    y+=lengthdir_y(velocidad*delta_time*0.00001,direction);
    direccion=direction+choose(-1,1)*irandom(45);
    evasor=-1*evasor;}
else{
    otrocoso=instance_place(x,y,movil);//colision con unidades
    if(otrocoso&lt;0 and denso=1){
        otrocoso=instance_place(x,y,astral);}//colision con fantasmas
    if(otrocoso&gt;0){
        direction=point_direction(otrocoso.x,otrocoso.y,x,y);
        x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
        y+=lengthdir_y(velocidad*delta_time*0.00001,direction);
        direccion=direction+choose(-1,1)*irandom(45);
        evasor=-1*evasor;}
    else{//inteligencia artificial
        switch(estado){
            case 0:
                otrocoso=0;
                if(super=1){
                    if(point_distance(x,y,espectro.x,espectro.y)&gt;visualizacion*0.2){
                        mp_potential_step_object(espectro.x,espectro.y,0,bloque);
                        x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                        y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);
                        direccion=direction+choose(-1,1)*irandom(45);
                        otrocoso=1;}}
                if(otrocoso=0){
                    if(instance_exists(puntoazul)){
                        if(mente&gt;0 and instance_exists(mente)){
                            metax=mente.x;
                            metay=mente.y;
                            distanciablanco=point_distance(x,y,mente.x,mente.y);
                            if(collision_line(x,y,mente.x,mente.y,bloque,altocol,1) or distanciablanco&gt;visualizacion
                            or mente.object_index!=carroazul){
                                mente=-1;
                                estado=2;}
                            else if(distanciablanco&gt;visualizacion*0.3){
                                mp_potential_step_object(mente.x,mente.y,0,bloque);
                                x+=lengthdir_x(velocidad*0.7*delta_time*0.00001,direction);
                                y+=lengthdir_y(velocidad*0.7*delta_time*0.00001,direction);
                                if(distanciablanco&lt;visualizacion*0.35){
                                    direccion=direction+choose(-1,1)*irandom(45);}}
                            else{
                                if(mueve&gt;0){
                                    direction=direccion;
                                    x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                                    y+=lengthdir_y(mueve*delta_time*0.00001,direction);}}}
                        else{
                            if(mueve&gt;0){
                                direction=direccion;
                                x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                                y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                            if(paso=3){
                                buscacarro(id);}}}
                    else{
                        if(mueve&gt;0){
                            direction=direccion;
                            x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                            y+=lengthdir_y(mueve*delta_time*0.00001,direction);}}}
                if(paso=4){//busca enemigos
                    pillandolo(enemigo,id);
                    sigueplayer(id);}
                break;
            case 1:
                if(instance_exists(puntoazul)){
                    if(mente&gt;0 and mente.object_index=carroazul){
                        mente=-1;}}
                if(blanco&gt;0 and instance_exists(blanco)){
                    metax=blanco.x;
                    metay=blanco.y;
                    distanciablanco=point_distance(x,y,blanco.x,blanco.y);
                    if(collision_line(x,y,blanco.x,blanco.y,bloque,altocol,1) or distanciablanco&gt;visualizacion){
                        blanco=-1;
                        estado=2;}
                    else{
                        if(arma=0){
                            otrocoso=0;
                            if(super=1){
                                if(point_distance(x,y,espectro.x,espectro.y)&gt;visualizacion*0.3){
                                    mp_potential_step_object(espectro.x,espectro.y,0,bloque);
                                    x+=lengthdir_x(velocidad*0.9*delta_time*0.00001,direction);
                                    y+=lengthdir_y(velocidad*0.9*delta_time*0.00001,direction);
                                    otrocoso=1;}}
                            if(otrocoso=0){
                                if(distanciablanco&gt;mele*1.5){
                                    mp_potential_step_object(blanco.x,blanco.y,0,bloque);
                                    if(paso&gt;2 and blanco.arma&gt;0 and super=0){
                                        if(evasor&gt;0){direction+=60;}
                                        else{direction-=60;}}
                                    x+=lengthdir_x(velocidad*0.7*delta_time*0.00001,direction);
                                    y+=lengthdir_y(velocidad*0.7*delta_time*0.00001,direction);}
                                else{
                                    if(reloj2=-1){
                                        reloj2=0;}}}}
                        else{
                            if(distanciablanco&gt;visualizacion*ojo){//maxima dist. disparo
                                mp_potential_step_object(blanco.x,blanco.y,0,bloque);
                                x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                                y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);}
                            else{
                                if(reloj2=-1){
                                    reloj2=0;}
                                if(distanciablanco&lt;visualizacion*(ojo-0.4) and super=0){//minima cercania a blanco
                                    if(point_distance(x,y,hullex,hulley)&lt;mele or reloj3=0){
                                        alejarse(id);}
                                    else{
                                        mp_potential_step_object(hullex,hulley,0,bloque);
                                        x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                                        y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);}}
                                else{
                                    if(mueve&gt;0){
                                        direction=direccion;
                                        x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                                        y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                                    else{
                                        direction=point_direction(blanco.x,blanco.y,x,y)+evasor;
                                        x+=lengthdir_x(velocidad*0.7*delta_time*0.00001,direction);
                                        y+=lengthdir_y(velocidad*0.7*delta_time*0.00001,direction);}}}
                            if(super=1){
                                if(point_distance(x,y,espectro.x,espectro.y)&gt;visualizacion*0.3){
                                    mp_potential_step_object(espectro.x,espectro.y,0,bloque);
                                    x+=lengthdir_x(velocidad*0.9*delta_time*0.00001,direction);
                                    y+=lengthdir_y(velocidad*0.9*delta_time*0.00001,direction);
                                    direccion=direction+choose(-1,1)*irandom(45);
                                    evasor=-1*evasor;}}}}}
                else{
                    blanco=-1;
                    estado=0;} break;
            case 2:
                if(super=1){
                    estado=0;}
                else{
                    if(point_distance(x,y,metax,metay)&lt;mele){
                        if(arma=-1){
                            estado=3;}
                        else{
                            estado=0;}}
                    else{
                        mp_potential_step_object(metax,metay,0,bloque);
                        x+=lengthdir_x(velocidad*0.7*delta_time*0.00001,direction);
                        y+=lengthdir_y(velocidad*0.7*delta_time*0.00001,direction);
                        if(paso=4){//busca enemigos
                            pillandolo(enemigo,id);
                            sigueplayer(id);}}} break;
            case 3:
                if(recarga&gt;0 and instance_exists(recarga)){
                    if(arma&gt;0){
                        if(instance_exists(blanco) and blanco&gt;0){
                            distanciablanco=point_distance(x,y,blanco.x,blanco.y);
                            if(collision_line(x,y,blanco.x,blanco.y,bloque,altocol,1) or distanciablanco&gt;visualizacion){
                                blanco=-1;}
                            else{
                                if(reloj2=-1){
                                    reloj2=0;}}}
                        else{
                            pillandolo(enemigo,id);}}
                    otrocoso=instance_place(x,y,objeto);
                    if(otrocoso=recarga){
                        if(arma=-1){
                            arma=recarga.tipo;
                            municion=recarga.municion;
                            with(recarga){instance_destroy();}}
                        else if(recarga.tipo=arma and arma&gt;0){
                            if(municion+recarga.municion&lt;100){
                                municion+=recarga.municion;
                                with(recarga){instance_destroy();}}
                            else{
                                recarga.municion=municion+recarga.municion-99;
                                municion=99;}}
                        else{
                            recarga.x=-500;
                            otrocoso=instance_create(x,y,objeto);
                            otrocoso.tipo=arma;
                            otrocoso.municion=municion;
                            suma_municion(otrocoso);
                            arma=recarga.tipo;
                            municion=recarga.municion;
                            with(recarga){instance_destroy();}}
                        eventocambiarma(id);
                        audio_play_sound_at(s_recarga,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,5);
                        recarga=-1;}
                    else{
                        mp_potential_step_object(recarga.x,recarga.y,0,bloque);
                        x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                        y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);}}
                else if(arma=-1){
                    if(instance_exists(blanco) and blanco&gt;0){
                        if(collision_line(x,y,blanco.x,blanco.y,bloque,altocol,1) or
                        point_distance(x,y,blanco.x,blanco.y)&gt;visualizacion or blanco.arma=-1){
                            blanco=-1;
                            hullex=x;
                            hulley=y;}
                        else{
                            if(point_distance(x,y,hullex,hulley)&lt;2*mele or reloj3=0){
                                alejarse(id);}
                            mp_potential_step_object(hullex,hulley,0,bloque);
                            x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                            y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);}
                        if(paso=4){
                            busca_arma(-1,1,id);}}
                    else{
                        if(instance_exists(puntoazul)){
                            if(mente&gt;0 and instance_exists(mente)){
                                metax=mente.x;
                                metay=mente.y;
                                distanciablanco=point_distance(x,y,mente.x,mente.y);
                                if(collision_line(x,y,mente.x,mente.y,bloque,altocol,1) or distanciablanco&gt;visualizacion
                                or mente.object_index!=ambulanciazul){
                                    mente=-1;
                                    estado=2;}
                                else if(distanciablanco&gt;visualizacion*0.3){
                                    mp_potential_step_object(mente.x,mente.y,0,bloque);
                                    x+=lengthdir_x(velocidad*0.8*delta_time*0.00001,direction);
                                    y+=lengthdir_y(velocidad*0.8*delta_time*0.00001,direction);
                                    if(distanciablanco&lt;visualizacion*0.35){
                                        direccion=direction+choose(-1,1)*irandom(45);}}
                                else if(mueve&gt;0){
                                    direction=direccion;
                                    x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                                    y+=lengthdir_y(mueve*delta_time*0.00001,direction);}}
                            else{
                                if(mueve&gt;0){
                                    direction=direccion;
                                    x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                                    y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                                if(paso=3){
                                    buscacarro(id);}}}
                        else if(mueve&gt;0){
                            direction=direccion;
                            x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                            y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                        if(paso=4){
                            busca_arma(enemigo,1,id);}}}
                else{
                    estado=0;} break;}}}
if(vida&lt;10){//recoge vida
    otrocoso=instance_nearest(x,y,viducha);
    if(otrocoso&gt;0){
        if(point_distance(otrocoso.x,otrocoso.y,x,y)&lt;28){
            guardianvoz(7,id);
            if(otrocoso.tipo=0){
                vida+=3.5;
                if(vida&gt;10){vida=10;}}
            else{
                vida=10;}
            with(otrocoso){instance_destroy();}}}}
if(x&lt;20){//limites de mundo
    x=20;
    direccion=direction+choose(-1,1)*irandom(45);
    evasor=-1*evasor;}
else if(x&gt;room_width-20){
    x=room_width-20;
    direccion=direction+choose(-1,1)*irandom(45);
    evasor=-1*evasor;}
if(y&gt;room_height-20){
    y=room_height-20;
    direccion=direction+choose(-1,1)*irandom(45);
    evasor=-1*evasor;}
else if(y&lt;120){
    y=120;
    direccion=direction+choose(-1,1)*irandom(45);
    evasor=-1*evasor;}
if(reloj2!=-1){//proceso disparar
    if(reloj2&lt;lanzamiento*1.5){
        reloj2+=delta_time*0.00001;
        if(tiro=-1 and reloj2&gt;lanzamiento*0.75){
            if(estado=1 and instance_exists(blanco)){
                disparo(point_direction(x,y,blanco.x,blanco.y),id);
                tiro=2;}
            else{
                tiro=1;}
            if(arma=0){audio_play_sound_at(s_disp_espada,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,3);}}}
    else{
        if(tiro=2 and arma&gt;0 and super=0){
            municion-=1;}
        if(arma&gt;0 and municion=0){
            arma=-1;
            blanco=-1;
            eventocambiarma(id);}
        tiro=-1;
        reloj2=-1;}}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
if(xprevious=x and yprevious=y){
    draw_sprite(d_patas,0,x,y);}
else{
    draw_sprite(d_patas,paso,x,y);}
draw_sprite(d_guardian,floor(paso/3),x,y);
if(super=1){
    draw_sprite(d_guardian,2+floor(paso/3),x,y);}
if(arma=-1){
    draw_sprite(d_brazos,0,x,y);}
else{
    if(municion&gt;1){
        draw_sprite(d_municion,arma,x,y);}
    else{
        draw_sprite(d_municion,0,x,y);}
    if(tre_d=1){
        if(reloj2=-1){
            draw_sprite(d_armas,arma*9,x,y);}
        else{
            draw_sprite(d_armas,(arma*9)+calculabrazo(reloj2,lanzamiento*1.5),x,y);}}
    else{
        if(reloj2=-1){
            draw_sprite(d_armas,arma,x+9,y-97);}
        else if(arma&gt;0 and tiro=1){
            draw_sprite_ext(d_armas,7,x+9,y-97,1,1,(reloj2*720)/(lanzamiento*1.5),c_white,1);}
        else{
            draw_sprite_ext(d_armas,arma,x+9,y-97,1,1,(reloj2*720)/(lanzamiento*1.5),c_white,1);}}}
if(cercano0=1){
    if(tre_d=0){
        draw_line_colour(x-15,y-140,x-15+vida*3,y-140,c_blue,c_blue);
        draw_line_colour(x-15+vida*3,y-140,x+15,y-140,c_ltgray,c_ltgray);}
    else{
        draw_rectangle_colour(x-15,y-104,x-15+vida*3,y-100,c_blue,c_blue,c_blue,c_blue,0);
        draw_rectangle_colour(x-15+vida*3,y-104,x+15,y-100,c_ltgray,c_ltgray,c_ltgray,c_ltgray,0);}}
if(cercano1=1 or cercano2=1){
    if(arma&gt;0){
        draw_set_halign(fa_center);
        draw_set_valign(fa_bottom);
            if(tre_d=1){
                draw_text_transformed_colour(x,y-104,municion,1.4,1.4,0,c_black,c_black,c_black,c_black,1);}
            else{
                draw_text_transformed_colour(x,y-140,municion,1.4,1.4,0,c_black,c_black,c_black,c_black,1);}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
