<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>imagen</parentName>
  <maskName>base0</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_snap(48,48);
if(instance_place(x,y,bloque)){
    instance_destroy();
    exit;}
if(x&lt;32 or x&gt;room_width-32 or y&gt;room_height-32 or y&lt;128){
    instance_destroy();
    exit;}
depth=y*-10;
with(baseazul){
    mp_grid_clear_rectangle(rejilla,x-10,y-10,x+10,y+10);
    aux=mp_grid_path(rejilla,camino,x,y,puntoazul.x,puntoazul.y,1);
    if(aux=false){
        path_clear_points(camino);
        path_clear_points(regreso);}
    else{
        regreso=path_duplicate(camino);
        path_reverse(regreso);
        reloj=path_get_length(camino);
        if(visualizacion&lt;reloj){
            reloj=floor((visualizacion/reloj)*1000)*0.001;
            var ji;
            for(ji=reloj;ji&lt;1;ji+=reloj){
                aux=instance_create(x,y,carroazul);
                aux.procedencia=id;
                with(aux){
                    path_start(procedencia.camino,velocidad*0.5*delta_time*0.00001,0,1);
                    path_position=ji;
                    x=path_get_x(procedencia.camino,ji);
                    y=path_get_y(procedencia.camino,ji);}
                aux=instance_create(puntoazul.x,puntoazul.y,ambulanciazul);
                aux.procedencia=id;
                with(aux){
                    path_start(procedencia.regreso,velocidad*0.6*delta_time*0.00001,0,1);
                    path_position=ji;
                    x=path_get_x(procedencia.regreso,ji);
                    y=path_get_y(procedencia.regreso,ji);}}}
        reloj=irandom(15);}
    mp_grid_add_rectangle(rejilla,x-10,y-10,x+10,y+10);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_raton,1,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
