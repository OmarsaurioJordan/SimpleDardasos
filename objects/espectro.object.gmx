<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>astral</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_object[0]=espectro;
reloj1=0;
paso=1;
otrocoso=0;
auto=0;
blanco=-1;
super=-1;//poseido
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con vivos
else{
    denso=0;}//colision con fantasmas
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
otrocoso=instance_place(x,y,astral);//colision con fantasmas
if(otrocoso&lt;0 and denso=1){
    otrocoso=instance_place(x,y,movil);}//colision con vivos
if(otrocoso&gt;0){
    x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
    y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}
else{
    if(keyboard_check(ord('A'))){//controles movimiento
        if(keyboard_check(ord('S'))){
            direction=225;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
        else if(keyboard_check(ord('W'))){
            direction=135;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
        else{
            direction=180;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}}
    else if(keyboard_check(ord('D'))){
        if(keyboard_check(ord('S'))){
            direction=315;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
        else if(keyboard_check(ord('W'))){
            direction=45;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
        else{
            direction=0;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}}
    else if(keyboard_check(ord('W'))){
        direction=90;
        x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
        y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
    else if(keyboard_check(ord('S'))){
        direction=270;
        x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
        y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
    else{
        otrocoso=instance_place(x,y,bloque);//colision con bloques
        if(otrocoso&gt;0){
            x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
            y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}}}
if(x&lt;20){//limites del mundo
    x=20;}
else if(x&gt;room_width-20){
    x=room_width-20;}
if(y&gt;room_height-20){
    y=room_height-20;}
else if(y&lt;120){
    y=120;}
if(keyboard_check_pressed(ord('T'))and instance_exists(baseazul)){//crear/borrar un punto guia
    audio_stop_sound(s_espectral);
    audio_play_sound(s_espectral,7,0);
    with(carroazul){
        instance_destroy();}
    with(ambulanciazul){
        instance_destroy();}
    if(instance_exists(puntoazul)){
        if(point_distance(x,y,puntoazul.x,puntoazul.y)&lt;mele*2){
            with(puntoazul){
                instance_destroy();}
            with(baseazul){
                path_clear_points(camino);
                path_clear_points(regreso);}}
        else{
            with(puntoazul){
                instance_destroy();}
            instance_create(x,y,puntoazul);}}
    else{
        instance_create(x,y,puntoazul);}}
if(keyboard_check_pressed(vk_space) and condicionador.vidas=0){//poseer guardian
    if(super&gt;0){
        with(super){super=0;}
        super=-1;}
    else if(instance_exists(guardian)){
        otrocoso=instance_nearest(x,y,guardian);
        if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;visualizacion*0.2){
            otrocoso.super=1;
            super=otrocoso;
            audio_stop_sound(s_espectral);
            audio_play_sound(s_espectral,7,0);}}}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(d_sombra,0,x,y,1,1,0,c_white,0.5);
if(xprevious=x and yprevious=y){
    draw_sprite(d_patillas,0,x,y);}
else{
    draw_sprite(d_patillas,paso,x,y);}
draw_sprite(d_fantasma,2+floor(paso/3),x,y);
if(denso=1){
    if(xprevious=x and yprevious=y){
        draw_sprite(d_patillas,0,x,y);}
    else{
        draw_sprite(d_patillas,paso,x,y);}
    draw_sprite(d_fantasma,2+floor(paso/3),x,y);}
draw_sprite_ext(d_fantasma,floor(paso/3),x,y,1,1,0,c_ltgray,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
