<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>movil</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_object[0]=comanche;
reloj1=0;
paso=1;
otrocoso=0;
habla=-1;
arma=-1;//-1:nada,0:espada,1:flecha,2:bala,3:perdigon,4:disco,5:avion,6:bomba
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con fantasmas
else{
    denso=0;}//colision con vivos
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
otrocoso=instance_place(x,y,bloque);//colision con bloques
if(otrocoso&gt;0){
    x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
    y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}
else{
    otrocoso=instance_place(x,y,movil);//colision con unidades
    if(otrocoso&lt;0 and denso=1){
        otrocoso=instance_place(x,y,astral);}//colision con fantasmas
    if(otrocoso&gt;0){
        x+=lengthdir_x(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));
        y+=lengthdir_y(velocidad*delta_time*0.00001,point_direction(otrocoso.x,otrocoso.y,x,y));}
    else{//controles movimiento
        if(keyboard_check(ord('A'))){
            if(keyboard_check(ord('S'))){
                direction=225;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
            else if(keyboard_check(ord('W'))){
                direction=135;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
            else{
                direction=180;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}}
        else if(keyboard_check(ord('D'))){
            if(keyboard_check(ord('S'))){
                direction=315;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
            else if(keyboard_check(ord('W'))){
                direction=45;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
            else{
                direction=0;
                x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
                y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}}
        else if(keyboard_check(ord('W'))){
            direction=90;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}
        else if(keyboard_check(ord('S'))){
            direction=270;
            x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
            y+=lengthdir_y(velocidad*delta_time*0.00001,direction);}}}
if(x&lt;20){//limites del mundo
    x=20;}
else if(x&gt;room_width-20){
    x=room_width-20;}
if(y&gt;room_height-20){
    y=room_height-20;}
else if(y&lt;120){
    y=120;}
if(keyboard_check_pressed(ord('1'))){//cambiar objeto
    arma=-1;}
else if(keyboard_check_pressed(ord('2'))){
    arma=0;}
else if(keyboard_check_pressed(ord('3'))){
    arma=1;}
else if(keyboard_check_pressed(ord('4'))){
    arma=2;}
else if(keyboard_check_pressed(ord('5'))){
    arma=3;}
else if(keyboard_check_pressed(ord('6'))){
    arma=4;}
else if(keyboard_check_pressed(ord('7'))){
    arma=5;}
else if(keyboard_check_pressed(ord('8'))){
    arma=6;}
else if(keyboard_check_pressed(ord('9'))){
    arma=7;}
else if(keyboard_check_pressed(ord('0'))){
    arma=8;}
if(keyboard_check_pressed(ord('Q'))or keyboard_check(vk_space)){//borrar objeto en suelo
    otrocoso=instance_nearest(x,y,objeto);
    if(otrocoso&gt;0){
        if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;mele){
            audio_play_sound(s_recarga,5,0);
            with(otrocoso){instance_destroy();}}
        else{
            otrocoso=instance_nearest(x,y,viducha);
            if(otrocoso&gt;0){
                if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;mele){
                    audio_play_sound(s_recarga,5,0);
                    with(otrocoso){instance_destroy();}}}}}
    else{
        otrocoso=instance_nearest(x,y,viducha);
        if(otrocoso&gt;0){
            if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;mele){
                audio_play_sound(s_recarga,5,0);
                with(otrocoso){instance_destroy();}}}}}
if(keyboard_check_pressed(ord('E'))){//crear objeto en suelo
    if(arma&gt;-1){
        if(arma&lt;7){
            otrocoso=instance_create(x,y,objeto);
            otrocoso.tipo=arma;
            switch(arma){
                case 1: otrocoso.municion=mu1*1.5; break;
                case 2: otrocoso.municion=mu2*1.5; break;
                case 3: otrocoso.municion=mu3*1.5; break;
                case 4: otrocoso.municion=mu4*1.5; break;
                case 5: otrocoso.municion=mu5*1.5; break;
                case 6: otrocoso.municion=mu6*1.5; break;}
            suma_municion(otrocoso);}
        else if(arma=7){
            otrocoso=instance_create(x,y,viducha);
            otrocoso.tipo=0;}
        else{
            otrocoso=instance_create(x,y,viducha);
            otrocoso.tipo=1;}}}
if(keyboard_check_pressed(ord('Z'))){//llamar nuevo guardian
    otrocoso=-1;
    if(condicionador.densidadguardianes=1){
        aux=(room_width*room_height)/100000;
        if(condicionador.num_guardianes&gt;aux){
            otrocoso=0;}}
    else{
        aux=(room_width*room_height)/35000;
        if(condicionador.num_guardianes&gt;aux){
            otrocoso=0;}}
    if(otrocoso=-1){
        comanchevoz(3,id);
        otrocoso=instance_create(x,y+2,paracaidista);
        otrocoso.clase=0;
        if(arma&lt;7 and arma!=-1){
            otrocoso.arma=arma+2;}}}
if(keyboard_check_pressed(ord('X'))){//despedir guardian
    otrocoso=instance_nearest(x,y,guardian);
    if(otrocoso&gt;0){
        if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;mele*2){
            comanchevoz(4,id);
            otrocoso.transformacion=1;
            instance_create(otrocoso.x,otrocoso.y,despedido);
            with(otrocoso){instance_destroy();}}}}
if(keyboard_check_pressed(ord('R'))){//llamar aliados
    if(instance_exists(telefonica)){
        with(telefonica){
            reloj=0;
            if(disponibles&gt;0){
                comanchevoz(0,comanche);
                for(i=0;i&lt;disponibles;i+=1){
                    do{
                        x=comanche.x-visualizacion*0.3+irandom(visualizacion*0.6);
                        y=comanche.y-visualizacion*0.3+irandom(visualizacion*0.6);}
                    until(point_distance(x,y,comanche.x,comanche.y)&lt;visualizacion*0.3 and !collision_circle(x,y,radiobjeto,bloque,1,1));
                    aux=instance_create(x,y,relanzado);
                    aux.arma=arma[i];
                    aux.municion=municion[i];}}
            instance_destroy();}}
    else{
        instance_create(x,y,telefonica);}}
if(keyboard_check_pressed(ord('T'))and instance_exists(baseazul)){//crear/borrar un punto guia
    with(carroazul){
        instance_destroy();}
    with(ambulanciazul){
        instance_destroy();}
    if(instance_exists(puntoazul)){
        if(point_distance(x,y,puntoazul.x,puntoazul.y)&lt;mele*2){
            comanchevoz(2,id);
            with(puntoazul){
                instance_destroy();}
            with(baseazul){
                path_clear_points(camino);
                path_clear_points(regreso);}}
        else{
            comanchevoz(1,id);
            with(puntoazul){
                instance_destroy();}
            instance_create(x,y,puntoazul);}}
    else{
        comanchevoz(1,id);
        instance_create(x,y,puntoazul);}}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
if(tre_d=0){
    draw_sprite(d_aurisima,paso-1,x,y-130);}
else{
    draw_sprite(d_campesino,4+floor(paso/3),x,y);}
if(xprevious=x and yprevious=y){
    draw_sprite(d_patas,0,x,y);}
else{
    draw_sprite(d_patas,paso,x,y);}
draw_sprite(d_campesino,2+floor(paso/3),x,y);
if(arma=-1){
    draw_sprite(d_brazos,0,x,y);}
else{
    draw_sprite(d_brazos,4,x,y);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
