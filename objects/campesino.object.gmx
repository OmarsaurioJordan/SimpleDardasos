<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>movil</parentName>
  <maskName>base1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>reloj1=0;
paso=choose(1,2,3,4);
reloj2=0;
arma=0;//0:nada,1:cultivo
otrocoso=-1;
estado=0;//0:normal,1:recolector,2:transportador,3:antiespadas
mente=-1;//casa cercana
blanco=-1;
mueve=0;
estres=0;//tiempo con material cargado
habla=-1;
direccion=irandom(360);
cambio=8+irandom(12);
if(control.fecha=2 or control.fecha=4){
    denso=1;}//colision con fantasmas
else{
    denso=0;}//colision con vivos
mp_potential_settings(360,10,1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(reloj1&lt;0.8){//velocidad animacion principal
    reloj1+=delta_time*0.00001;}
else{
    reloj1=0;
    if(paso=4){
        paso=1;}
    else{
        paso+=1;}}
if(reloj2&lt;cambio){//cambios aleatorios comportamiento
    reloj2+=delta_time*0.00001;}
else{
    reloj2=0;
    cambio=14+irandom(21);
    if(arma&gt;0){
        estres+=1;
        if(estres&gt;5){
            estres=0;
            buscacasa(id);}}
    if(mueve&gt;0){
        if(irandom(3)&gt;0){
            mueve=velocidad*0.5+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        if(irandom(2)=0 and mente&gt;0){
            if(point_distance(x,y,mente.x,mente.y)&gt;visualizacion*0.5){
                direccion=sumangulos(point_direction(x,y,mente.x,mente.y),-30+irandom(60));}
            else{
                direccion+=choose(-1,-1,0,1,1)*irandom(60);}}
        else{
            direccion=sumangulos(direccion,choose(-1,-1,0,1,1)*irandom(60));}}
    else{
        if(irandom(3)=0){
            mueve=velocidad*0.5+irandom(velocidad*0.2);}
        else{
            mueve=0;}
        direccion=irandom(360);}}
otrocoso=instance_place(x,y,bloque);//colision con bloques
if(otrocoso&gt;0){
    direction=point_direction(otrocoso.x,otrocoso.y,x,y);
    x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
    y+=lengthdir_y(velocidad*delta_time*0.00001,direction);
    direccion=direction+choose(-1,1)*irandom(45);}
else{
    otrocoso=instance_place(x,y,movil);//colision con unidades
    if(otrocoso&lt;0 and denso=1){
        otrocoso=instance_place(x,y,astral);}//colision con fantasmas
    if(otrocoso&gt;0){
        direction=point_direction(otrocoso.x,otrocoso.y,x,y);
        x+=lengthdir_x(velocidad*delta_time*0.00001,direction);
        y+=lengthdir_y(velocidad*delta_time*0.00001,direction);
        direccion=direction+choose(-1,1)*irandom(45);
        if((otrocoso.object_index=player or otrocoso.object_index=comanche) and irandom(7)=0){
            if(!audio_is_playing(s_silvido) and !collision_circle(x,y,visualizacion,enemigo,altocol,1)){
                audio_play_sound(s_silvido,6,0);}}}
    else{//inteligencia artificial
        switch(estado){
            case 0:
                if(mueve&gt;0){
                    direction=direccion;
                    x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                    y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                if(reloj2=0){
                    if(instance_exists(puntodenso)){
                        otrocoso=instance_nearest(x,y,puntodenso);
                        if(point_distance(x,y,otrocoso.x,otrocoso.y)&lt;visualizacion
                        and !collision_line(x,y,otrocoso.x,otrocoso.y,bloque,0,1)){
                            buscachucherias(id,8);}
                        else if(irandom(6)=0){
                            buscachucherias(id,6);}}
                    else if(irandom(12)=0){
                        buscachucherias(id,-12);}} break;
            case 1:
                if(blanco&gt;0 and instance_exists(blanco)){
                    mp_potential_step_object(blanco.x,blanco.y,0,bloque);
                    x+=lengthdir_x(velocidad*0.6*delta_time*0.00001,direction);
                    y+=lengthdir_y(velocidad*0.6*delta_time*0.00001,direction);
                    if(point_distance(x,y,blanco.x,blanco.y)&lt;mele){
                        switch(blanco.object_index){
                            case objeto: arma=2;
                                audio_play_sound_at(s_recarga,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,1);
                                with(blanco){instance_destroy();} break;
                            case cultivo: arma=1;
                                instance_create(blanco.x,blanco.y,semilla);
                                audio_play_sound_at(s_excarvando,x,y,0,visualizacion*0.1,visualizacion*1.5,1,0,1);
                                with(blanco){instance_destroy();} break;}
                            estado=2;
                            buscacasa(id);
                            mente=caminomenor(id,casa,condicionador.casitas);}}
                else{
                    estado=0;
                    blanco=-1;} break;
            case 2:
                if(blanco&gt;0){
                    mp_potential_step_object(blanco.x,blanco.y,0,bloque);
                    x+=lengthdir_x(velocidad*0.5*delta_time*0.00001,direction);
                    y+=lengthdir_y(velocidad*0.5*delta_time*0.00001,direction);
                    if(point_distance(x,y,blanco.x,blanco.y)&lt;mele*2){
                        arma=0; blanco=-1; mente=-1; estado=0;}}
                else{
                    if(mueve&gt;0){
                        direction=direccion;
                        x+=lengthdir_x(mueve*delta_time*0.00001,direction);
                        y+=lengthdir_y(mueve*delta_time*0.00001,direction);}
                    if(reloj2=0){
                        buscacasa(id);}} break;}}}
if(x&lt;20){//limites de mundo
    x=20;
    direccion=direction+choose(-1,1)*irandom(45);}
else if(x&gt;room_width-20){
    x=room_width-20;
    direccion=direction+choose(-1,1)*irandom(45);}
if(y&gt;room_height-20){
    y=room_height-20;
    direccion=direction+choose(-1,1)*irandom(45);}
else if(y&lt;120){
    y=120;
    direccion=direction+choose(-1,1)*irandom(45);}
depth=y*-10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(d_sombra,0,x,y);
if(xprevious=x and yprevious=y){
    draw_sprite(d_patas,0,x,y);}
else{
    draw_sprite(d_patas,paso,x,y);}
draw_sprite(d_campesino,floor(paso/3),x,y);
switch(arma){
    case 0: draw_sprite(d_brazos,0,x,y); break;
    case 1: draw_sprite(d_brazos,1,x,y); break;
    case 2: draw_sprite(d_brazos,4,x,y); break;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
